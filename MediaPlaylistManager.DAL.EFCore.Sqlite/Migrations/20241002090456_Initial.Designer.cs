// <auto-generated />
using System;
using MediaPlaylistManager.DAL.EFCore.Sqlite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaPlaylistManager.DAL.EFCore.Sqlite.Migrations
{
    [DbContext(typeof(DalDbContext))]
    [Migration("20241002090456_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MediaPlaylistManager.DAL.Shared.Entities.MediaItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.ToTable("MediaItems");
                });

            modelBuilder.Entity("MediaPlaylistManager.DAL.Shared.Entities.PlaylistEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("MediaPlaylistManager.DAL.Shared.Entities.MediaItemEntity", b =>
                {
                    b.HasOne("MediaPlaylistManager.DAL.Shared.Entities.PlaylistEntity", "Playlist")
                        .WithMany("MediaItems")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("MediaPlaylistManager.DAL.Shared.Entities.PlaylistEntity", b =>
                {
                    b.Navigation("MediaItems");
                });
#pragma warning restore 612, 618
        }
    }
}
